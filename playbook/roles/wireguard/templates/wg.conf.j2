[Interface]
{# common #}
{% set forward = namespace(ipv4 = 0, ipv6 = 0) %}
ListenPort = {{ wireguard_listen_port }}
PostUp = wg set %i private-key <(cat /etc/wireguard/{{ wireguard_interface_name }}.privatekey)
PostDown = ufw delete allow out {{ wireguard_listen_port }}/udp
PostDown = ufw delete allow     {{ wireguard_listen_port }}/udp
PostUp   = ufw        allow     {{ wireguard_listen_port }}/udp comment "WireGuard {{ wireguard_group_name }}"
PostUp   = ufw        allow out {{ wireguard_listen_port }}/udp comment "WireGuard {{ wireguard_group_name }}"
{% if wireguard_ipv4 %}{# IPv4 #}
Address = {{ wireguard_ipv4 | ansible.utils.nthhost(wireguard_host_index) }}/{{ wireguard_ipv4_netmask }}
{%   if wireguard_ipv4_netmask != 32 %}
{%     set forward.ipv4 = forward.ipv4 + 1 %}
{%   endif %}
{%   if wireguard_nat_outside_interface %}
{#
PostDown = ufw route delete allow in on {{ wireguard_interface_name }} from {{ wireguard_ipv4 }}
PostUp   = ufw route        allow in on {{ wireguard_interface_name }} from {{ wireguard_ipv4 }}
#}
PostDown = iptables -t nat -D POSTROUTING -s {{ wireguard_ipv4 }} -o {{ wireguard_nat_outside_interface }} -j MASQUERADE
PostUp   = iptables -t nat -A POSTROUTING -s {{ wireguard_ipv4 }} -o {{ wireguard_nat_outside_interface }} -j MASQUERADE
PostDown = ufw route delete allow in on {{ wireguard_interface_name }} out on {{ wireguard_nat_outside_interface }} proto tcp from {{ wireguard_ipv4 }} to any port 80
PostUp   = ufw route        allow in on {{ wireguard_interface_name }} out on {{ wireguard_nat_outside_interface }} proto tcp from {{ wireguard_ipv4 }} to any port 80 comment "WireGuard {{ wireguard_group_name }} NAT routed HTTP"
PostDown = ufw route delete allow in on {{ wireguard_interface_name }} out on {{ wireguard_nat_outside_interface }} from {{ wireguard_ipv4 }} to any port 443
PostUp   = ufw route        allow in on {{ wireguard_interface_name }} out on {{ wireguard_nat_outside_interface }} from {{ wireguard_ipv4 }} to any port 443 comment "WireGuard {{ wireguard_group_name }} NAT routed HTTPS"
{%   endif %}
{% endif %}{# IPv4 #}
{% if wireguard_ipv6 %}{# IPv6 #}
Address = {{ wireguard_ipv6 | ansible.utils.nthhost(wireguard_host_index + wireguard_host_v6_offset) }}/{{ wireguard_ipv6_netmask }}
{%   if wireguard_ipv6_netmask != 128 %}
{%     set forward.ipv6 = forward.ipv6 + 1 %}
{%   endif %}
{%   if wireguard_nat_outside_interface %}
{#
PostDown = ufw route delete allow in on {{ wireguard_interface_name }} from {{ wireguard_ipv6 }}
PostUp   = ufw route        allow in on {{ wireguard_interface_name }} from {{ wireguard_ipv6 }}
#}
PostDown = ip6tables -t nat -D POSTROUTING -s {{ wireguard_ipv6 }} -o {{ wireguard_nat_outside_interface }} -j MASQUERADE
PostUp   = ip6tables -t nat -A POSTROUTING -s {{ wireguard_ipv6 }} -o {{ wireguard_nat_outside_interface }} -j MASQUERADE
{# Allow routed #}
PostDown = ufw route delete allow in on {{ wireguard_interface_name }} out on {{ wireguard_nat_outside_interface }} proto tcp from {{ wireguard_ipv6 }} to any port 80
PostUp   = ufw route        allow in on {{ wireguard_interface_name }} out on {{ wireguard_nat_outside_interface }} proto tcp from {{ wireguard_ipv6 }} to any port 80 comment "WireGuard {{ wireguard_group_name }} NAT routed HTTP"
PostDown = ufw route delete allow in on {{ wireguard_interface_name }} out on {{ wireguard_nat_outside_interface }} from {{ wireguard_ipv6 }} to any port 443
PostUp   = ufw route        allow in on {{ wireguard_interface_name }} out on {{ wireguard_nat_outside_interface }} from {{ wireguard_ipv6 }} to any port 443 comment "WireGuard {{ wireguard_group_name }} NAT routed HTTPS"
{%   endif %}
{% endif %}{# IPv6 #}
{#
Example:
  wireguard_nat_to_lan:
    ipv4: '10.21.0.0/24'
    #ipv6: 'fdcb:a987:6543:2100::/64'
    ifaces:
    - 'e+'
    - 'wlan+'
#}
{% if wireguard_nat_to_lan %}{# Allow ipv4 network and ipv6 network to ifaces as NAT #}
{%   for iface in wireguard_nat_to_lan.ifaces %}
{%     if 'ipv4' in wireguard_nat_to_lan %}{# Use NAT if source address is in wireguard_nat_to_lan.ipv4 #}
{%       set forward.ipv4 = forward.ipv4 + 1 %}
PostUp = iptables -A FORWARD -i {{ wireguard_interface_name }} -s {{ wireguard_nat_to_lan.ipv4 }} -j ACCEPT
PostUp = iptables -t nat -A POSTROUTING -s {{ wireguard_nat_to_lan.ipv4 }} -o {{ iface }} -j MASQUERADE
PostDown = iptables -A FORWARD -i {{ wireguard_interface_name }} -s {{ wireguard_nat_to_lan.ipv4 }} -j ACCEPT
PostDown = iptables -t nat -D POSTROUTING -s {{ wireguard_nat_to_lan.ipv4 }} -o {{ iface }} -j MASQUERADE
{%     endif %}
{%     if 'ipv6' in wireguard_nat_to_lan %}{# Use NAT if source address is in wireguard_nat_to_lan.ipv6 #}
{%       set forward.ipv6 = forward.ipv6 + 1 %}
PostUp = ip6tables -A FORWARD -i {{ wireguard_interface_name }} -s {{ wireguard_nat_to_lan.ipv6 }} -j ACCEPT
PostUp = ip6tables -t nat -A POSTROUTING -s {{ wireguard_nat_to_lan.ipv6 }} -o {{ iface }} -j MASQUERADE
PostDown = ip6tables -A FORWARD -i {{ wireguard_interface_name }} -s {{ wireguard_nat_to_lan.ipv6 }} -j ACCEPT
PostDown = ip6tables -t nat -D POSTROUTING -s {{ wireguard_nat_to_lan.ipv6 }} -o {{ iface }} -j MASQUERADE
{%     endif %}
{%   endfor %}
{% endif %}
{% if forward.ipv4 > 0 %}
PostUp = sysctl net.ipv4.ip_forward=1
{# Do not unset because other ifaces may depend ip_forward=1 #}
{# PostDown = sysctl net.ipv4.ip_forward=0 #}
{% endif %}
{% if forward.ipv6 > 0 %}
PostUp = sysctl net.ipv6.conf.all.forwarding=1
{# Do not unset because other ifaces may depend forwarding=1 #}
{# PostDown = sysctl net.ipv6.conf.default.forwarding=0 net.ipv6.conf.all.forwarding=0 #}
{% endif %}
{# Add any other conf #}
{% if wireguard_dns %}
PostUp = resolvectl domain '{{ wireguard_interface_name }}' '~{{ wireguard_etc_hosts_domain }}' && resolvectl dns '{{ wireguard_interface_name }}' '{{ wireguard_dns }}' || :
{% endif %}
{% if wireguard_coredns %}
{%   if wireguard_ipv4 %}
PostDown = ufw delete allow in on {{ wireguard_group_name }} from {{ wireguard_ipv4 }} to any port 53
PostUp   = ufw        allow in on {{ wireguard_group_name }} from {{ wireguard_ipv4 }} to any port 53 comment "WireGuard {{ wireguard_group_name }} coredns"
{%   endif %}
{%   if wireguard_ipv6 %}
PostDown = ufw delete allow in on {{ wireguard_group_name }} from {{ wireguard_ipv6 }} to any port 53
PostUp   = ufw        allow in on {{ wireguard_group_name }} from {{ wireguard_ipv6 }} to any port 53 comment "WireGuard {{ wireguard_group_name }} coredns"
{%   endif %}
{% endif %}
{{ wireguard_extra_conf }}
{# Peer sections #}
{#
Example for hosts in NAT:
  wireguard_extra_conf: |
    PostUp = ping -c 1 10.21.0.1 || :
  wireguard_persistent_keep_alive: 25
  wireguard_peer_only: # Add these hosts only
  - hub-host
Example for hub-host:
  wireguard_peer_without_endpoint: # These hosts are peers without endpoint (e.g. inside NAT)
  - host-in-nat-1
  - host-in-nat-2
  - host-in-nat-3
  # And add peers including Endpoint
Other hosts: Add peers including Endpoint only
#}
{% for hostname in groups[wireguard_group_name] %}
{%   if inventory_hostname != hostname %}
{%     set peer_conf = lookup('file', 'tmp/wireguard/{{ wireguard_group_name }}/'+hostname+'.peer-conf') %}
{%     if hostname in wireguard_peer_extra_conf %}
{%       set peer_extra_conf = "\n# extra conf\n" + wireguard_peer_extra_conf[hostname] %}
{%     else %}
{%       set peer_extra_conf = '' %}
{%     endif %}
{%     if wireguard_peer_only is defined %}
{%       if hostname in wireguard_peer_only %}
{{         peer_conf }}{{ peer_extra_conf }}
{%         if wireguard_persistent_keep_alive and 'Endpoint = ' in peer_conf %}
PersistentKeepAlive = {{ wireguard_persistent_keep_alive }}
{%         endif %}
{%       endif %}
{%     elif 'Endpoint = ' in peer_conf %}
{{       peer_conf }}{{ peer_extra_conf }}
{%       if wireguard_persistent_keep_alive %}
PersistentKeepAlive = {{ wireguard_persistent_keep_alive }}
{%       endif %}
{%     elif hostname in wireguard_peer_without_endpoint %}
{{       peer_conf }}{{ peer_extra_conf }}
{%     endif %}
{%   endif %}
{% endfor %}
